name: Build Kernel
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Set up Docker
      run: |
        docker pull atomxorg/ubuntu:latest
        docker run --rm -v $PWD:/workspace -w /workspace atomxorg/ubuntu:latest \
        /bin/bash -c "
        apt-get update && \
        apt-get install -y build-essential bc bison ccache clang cpio cmake flex git libelf-dev lld llvm ninja-build openssl python3 u-boot-tools && \
        rm -rf atom-x-clang && \
        git clone https://gitlab.com/ElectroPerf/atom-x-clang.git && \
        cd atom-x-clang && \
        ./build-llvm.py && \
        export TC_PATH=\$PWD/install && \
        echo 'export PATH=\$PATH:\$TC_PATH/bin' >> /workspace/.bashrc && \
        source /workspace/.bashrc && \
        cd /workspace && \
        rm -rf kernel AnyKernel3 && \
        git clone https://github.com/qa1729/android_kernel_xiaomi_sm7325.git kernel && \
        cd kernel && \
        make ARCH=arm64 CC=\$TC_PATH/bin/clang CROSS_COMPILE=\$TC_PATH/bin/aarch64-linux-android- defconfig && \
        make -j\$(nproc --all) ARCH=arm64 CC=\$TC_PATH/bin/clang CROSS_COMPILE=\$TC_PATH/bin/aarch64-linux-android- && \
        git clone https://github.com/osm0sis/AnyKernel3.git && \
        cp arch/arm64/boot/Image.gz-dtb AnyKernel3/ && \
        cd AnyKernel3 && \
        zip -r9 /workspace/kernel.zip *
        "
        
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kernel
        path: kernel.zip
